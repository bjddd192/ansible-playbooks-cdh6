- name: 添加 zookeeper 用户 
  user: name={{ zookeeper_user }} shell=/bin/bash password={{ zookeeper_user_password }} append=yes
  when: add_user is defined
  
- name: 准备 zookeeper 工作目录
  file: name={{ item }} state=directory owner={{ zookeeper_user }} group={{ zookeeper_group }} mode=0755
  with_items:
  - "{{ zookeeper_work_path }}"
  - "{{ zookeeper_data_path }}"
  - "{{ zookeeper_log_path }}"

- name: 下载 zookeeper 安装包
  get_url: url={{ zookeeper_download_url }} dest=/tmp owner={{ zookeeper_user }} group={{ zookeeper_group }} mode=644

- name: 解压 zookeeper 安装包
  unarchive:
    # src也可以直接填写一个URL地址直接进行下载解压
    src: "/tmp/zookeeper-{{zookeeper_version}}.tar.gz"
    copy: no
    dest: "{{ zookeeper_work_path }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  
- name: 设置 zookeeper 环境变量
  template: src=zookeeper_env.sh dest=/etc/profile.d

- name: 生效 zookeeper 环境变量
  shell: "source /etc/profile.d/zookeeper_env.sh"

- name: 拷贝 zookeeper 配置文件
  template: src={{ item }} dest={{ zookeeper_config_path }} owner={{ zookeeper_user }} group={{ zookeeper_group }} mode=644
  with_items:
  - zoo.cfg
  - log4j.properties

- name: 拷贝 zookeeper 执行文件
  template: src={{ item }} dest={{ zookeeper_bin_path }} owner={{ zookeeper_user }} group={{ zookeeper_group }} mode=755
  with_items:
  - zkEnv.sh
  - zkServer.sh
  - setId.sh

- name: 设置 myid
  shell: 'source {{ zookeeper_bin_path }}/setId.sh'
  become: yes
  become_user: "{{ zookeeper_user }}"